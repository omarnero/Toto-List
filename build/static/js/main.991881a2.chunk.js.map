{"version":3,"sources":["component/NewTodo.module.css","component/Todoitem.module.css","component/Todos.module.css","models/Todo.ts","store/todos-context.tsx","component/NewTodo.tsx","component/Todoitem.tsx","component/Todos.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","Todo","Todotext","id","name","this","Date","toISOString","TodoContext","React","createContext","items","addTodo","todo","removeTodo","TodoContextProvider","props","contextValue","useState","itodo","setItodo","newTodo","preve","concat","preev","filter","Provider","value","children","NewTodo","todoCtx","useContext","TodoTextInput","useRef","className","classes","form","onSubmit","event","preventDefault","TodoText","current","trim","length","htmlFor","type","ref","TodoItem","classse","item","onClick","onRemoveTodo","text","Todos","classe","todos","map","bind","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"iGACAA,EAAOC,QAAU,CAAC,KAAO,wB,gBCAzBD,EAAOC,QAAU,CAAC,KAAO,yB,gBCAzBD,EAAOC,QAAU,CAAC,MAAQ,uB,qJCOXC,E,aALb,WAAYC,GAAmB,yBAF/BC,QAE8B,OAD9BC,UAC8B,EAC5BC,KAAKD,KAAOF,EACZG,KAAKF,IAAK,IAAIG,MAAOC,iB,OCEZC,EAAcC,IAAMC,cAA8B,CAC7DC,MAAO,GACPC,QAAS,SAACC,KACVC,WAAY,SAACX,OA8BAY,EA5B2B,SAACC,GACzC,IAeIC,EAfJ,EAA0BC,mBAAiB,IAA3C,mBAAOC,EAAP,KAAcC,EAAd,KAqBA,OALAH,EAAe,CACbN,MAAOQ,EACPP,QAjBqB,SAACC,GACtB,IAAIQ,EAAU,IAAIpB,EAAKY,GAEvBO,GAAS,SAACE,GACR,OAAOA,EAAMC,OAAOF,OActBP,WAXwB,SAACX,GACzBiB,GAAS,SAACI,GACR,OAAOA,EAAMC,QAAO,SAACZ,GACnB,OAAOA,EAAKV,KAAOA,UAWvB,cAACK,EAAYkB,SAAb,CAAsBC,MAAOV,EAA7B,SACGD,EAAMY,Y,gBCdEC,EAnBW,SAACb,GACzB,IAAMc,EAAUC,qBAAWvB,GACrBwB,EAAgBC,iBAAyB,MAS/C,OACE,uBAAMC,UAAWC,IAAQC,KAAMC,SATX,SAACC,GACrBA,EAAMC,iBACN,IAAMC,EAAWR,EAAcS,QAASd,MACT,IAA3Ba,EAASE,OAAOC,QAGpBb,EAAQlB,QAAQ4B,IAGhB,UACE,uBAAOI,QAAQ,OAAf,sBACA,uBAAOC,KAAK,OAAO1C,GAAG,OAAO2C,IAAKd,IAClC,kD,gBCPSe,EATwD,SACrE/B,GAEA,OACE,oBAAIkB,UAAWc,IAAQC,KAAMC,QAASlC,EAAMmC,aAA5C,SACGnC,EAAMoC,Q,gBCWEC,EAdS,SAACrC,GACvB,IAAMc,EAAUC,qBAAWvB,GAC3B,OACE,oBAAI0B,UAAWoB,IAAOC,MAAtB,SACGzB,EAAQnB,MAAM6C,KAAI,SAACP,GAAD,OACjB,cAAC,EAAD,CAEEG,KAAMH,EAAK7C,KACX+C,aAAcrB,EAAQhB,WAAW2C,KAAK,KAAMR,EAAK9C,KAF5C8C,EAAK9C,UCMLuD,MAXf,WACE,OACE,cAAC,EAAD,UACE,sBAAKxB,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,UCIOyB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,SAKjDZ,M","file":"static/js/main.991881a2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewTodo_form__3BnvU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Todoitem_item__1l0Ys\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todos\":\"Todos_todos__1wmf5\"};","class Todo {\r\n  id: string;\r\n  name: string;\r\n  constructor(Todotext: string) {\r\n    this.name = Todotext;\r\n    this.id = new Date().toISOString();\r\n  }\r\n}\r\nexport default Todo;\r\n","import React, { useState } from \"react\";\r\nimport Todo from \"../models/Todo\";\r\ntype TodoContextObj = {\r\n  items: Todo[];\r\n  addTodo: (todo: string) => void;\r\n  removeTodo: (id: string) => void;\r\n};\r\nexport const TodoContext = React.createContext<TodoContextObj>({\r\n  items: [],\r\n  addTodo: (todo: string) => {},\r\n  removeTodo: (id: string) => {},\r\n});\r\nconst TodoContextProvider: React.FC<{}> = (props) => {\r\n  const [itodo, setItodo] = useState<Todo[]>([]);\r\n  const AddTodoHandler = (todo: string) => {\r\n    let newTodo = new Todo(todo);\r\n\r\n    setItodo((preve) => {\r\n      return preve.concat(newTodo);\r\n    });\r\n  };\r\n  const removeTodoHandler = (id: string) => {\r\n    setItodo((preev) => {\r\n      return preev.filter((todo) => {\r\n        return todo.id !== id;\r\n      });\r\n    });\r\n  };\r\n  let contextValue: TodoContextObj;\r\n  contextValue = {\r\n    items: itodo,\r\n    addTodo: AddTodoHandler,\r\n    removeTodo: removeTodoHandler,\r\n  };\r\n  return (\r\n    <TodoContext.Provider value={contextValue}>\r\n      {props.children}\r\n    </TodoContext.Provider>\r\n  );\r\n};\r\nexport default TodoContextProvider;\r\n","import React, { useContext, useRef } from \"react\";\r\nimport { TodoContext } from \"../store/todos-context\";\r\nimport classes from \"./NewTodo.module.css\";\r\nconst NewTodo: React.FC = (props) => {\r\n  const todoCtx = useContext(TodoContext);\r\n  const TodoTextInput = useRef<HTMLInputElement>(null);\r\n  const sumbitHandler = (event: React.FormEvent) => {\r\n    event.preventDefault();\r\n    const TodoText = TodoTextInput.current!.value;\r\n    if (TodoText.trim().length === 0) {\r\n      return;\r\n    }\r\n    todoCtx.addTodo(TodoText);\r\n  };\r\n  return (\r\n    <form className={classes.form} onSubmit={sumbitHandler}>\r\n      <label htmlFor=\"text\">New Todo</label>\r\n      <input type=\"text\" id=\"text\" ref={TodoTextInput} />\r\n      <button>Add Todo</button>\r\n    </form>\r\n  );\r\n};\r\nexport default NewTodo;\r\n","import React from \"react\";\r\nimport classse from \"./Todoitem.module.css\";\r\nconst TodoItem: React.FC<{ text: string; onRemoveTodo: () => void }> = (\r\n  props\r\n) => {\r\n  return (\r\n    <li className={classse.item} onClick={props.onRemoveTodo}>\r\n      {props.text}\r\n    </li>\r\n  );\r\n};\r\nexport default TodoItem;\r\n","import React, { useContext } from \"react\";\r\nimport { TodoContext } from \"../store/todos-context\";\r\nimport TodoItem from \"./Todoitem\";\r\nimport classe from \"./Todos.module.css\";\r\nconst Todos: React.FC = (props) => {\r\n  const todoCtx = useContext(TodoContext);\r\n  return (\r\n    <ul className={classe.todos}>\r\n      {todoCtx.items.map((item) => (\r\n        <TodoItem\r\n          key={item.id}\r\n          text={item.name}\r\n          onRemoveTodo={todoCtx.removeTodo.bind(null, item.id)}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\nexport default Todos;\r\n","import \"./App.css\";\nimport NewTodo from \"./component/NewTodo\";\nimport Todos from \"./component/Todos\";\nimport TodoContextProvider from \"./store/todos-context\";\n\nfunction App() {\n  return (\n    <TodoContextProvider>\n      <div className=\"App\">\n        <NewTodo />\n        <Todos />\n      </div>\n    </TodoContextProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}